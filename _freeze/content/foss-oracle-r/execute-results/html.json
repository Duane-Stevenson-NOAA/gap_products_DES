{
  "hash": "9fc21341de416c5703c265a9071ca596",
  "result": {
    "markdown": "---\ntitle: Access via Oracle and R (AFSC only)\n---\n\n\n\n\nIf the user has access to the AFSC `Oracle` database, the user can use `SQL developer` to view and pull the FOSS public data directly from the `GAP_PRODUCTS` `Oracle` schema. \n\n### Connect to Oracle from R\n\nMany users will want to access the data from `Oracle` using `R`. The user will need to install the `RODBC` `R` package and ask OFIS (IT) connect `R` to `Oracle`. Then, use the following code in `R` to establish a connection from `R` to `Oracle`: \n\nHere, the user can write in their username and password directly into the `RODBC` connect function. Never save usernames or passwords in scripts that may be intentionally or unintentionally shared with others. If no username and password is entered in the function, pop-ups will appear on the screen asking for the username and password. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gapindex)\nchannel <- gapindex::get_connected()\n```\n:::\n\n\n### Ex. 1: Join data\n\nTo join these tables in Oracle, you may use a variant of the following code: \n\n\n::: {.cell}\n\n```{.sql .cell-code}\nSELECT \nhh.YEAR,\nhh.SRVY,                 \nhh.SURVEY,\nhh.SURVEY_DEFINITION_ID,\nhh.SURVEY_NAME,\nhh.CRUISE,\nhh.CRUISEJOIN,           \nhh.HAUL,\nhh.HAULJOIN,\nhh.STRATUM,\nhh.STATION,\nhh.VESSEL_ID,\nhh.VESSEL_NAME,          \nhh.DATE_TIME,\nhh.LATITUDE_DD_START, \nhh.LONGITUDE_DD_START, \nhh.LATITUDE_DD_END,\nhh.LONGITUDE_DD_END, \nhh.BOTTOM_TEMPERATURE_C,\nhh.SURFACE_TEMPERATURE_C,\nhh.DEPTH_M,\ncc.SPECIES_CODE,\nss.ITIS,\nss.WORMS,\nss.COMMON_NAME,     \nss.SCIENTIFIC_NAME,\nss.ID_RANK,\nCASE WHEN cc.CPUE_KGKM2 IS NULL THEN 0 ELSE cc.CPUE_KGKM2 END AS CPUE_KGKM2,\nCASE WHEN cc.CPUE_NOKM2 IS NULL THEN 0 ELSE cc.CPUE_NOKM2 END AS CPUE_NOKM2,\nCASE WHEN cc.COUNT IS NULL THEN 0 ELSE cc.COUNT END AS COUNT,\nCASE WHEN cc.WEIGHT_KG IS NULL THEN 0 ELSE cc.WEIGHT_KG END AS WEIGHT_KG,\nCASE WHEN cc.TAXON_CONFIDENCE IS NULL THEN NULL ELSE cc.TAXON_CONFIDENCE END AS TAXON_CONFIDENCE,\nhh.AREA_SWEPT_KM2,       \nhh.DISTANCE_FISHED_KM,\nhh.DURATION_HR,          \nhh.NET_WIDTH_M,\nhh.NET_HEIGHT_M,\nhh.PERFORMANCE \nFROM GAP_PRODUCTS.FOSS_SURVEY_SPECIES sv\nFULL OUTER JOIN GAP_PRODUCTS.FOSS_SPECIES ss\nON sv.SPECIES_CODE = ss.SPECIES_CODE\nFULL OUTER JOIN GAP_PRODUCTS.FOSS_HAUL hh\nON sv.SURVEY_DEFINITION_ID = hh.SURVEY_DEFINITION_ID\nFULL OUTER JOIN GAP_PRODUCTS.FOSS_CATCH cc\nON sv.SPECIES_CODE = cc.SPECIES_CODE\nAND hh.HAULJOIN = cc.HAULJOIN\n```\n:::\n\n\n### Ex. 2: Subset data\n\nHere, we are pulling EBS Pacific cod from 2010 - 2021: \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Pull data\na <- RODBC::sqlQuery(\nchannel = channel, \nquery = \n\"SELECT * FROM GAP_PRODUCTS.FOSS_CATCH cc\nJOIN GAP_PRODUCTS.FOSS_HAUL hh\nON cc.HAULJOIN = hh.HAULJOIN\nWHERE SRVY = 'EBS' \nAND SPECIES_CODE = 21720 -- 'Pacific cod' \nAND YEAR >= 2010 \nAND YEAR < 2021\")\n\nhead(a)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  HAULJOIN SPECIES_CODE CPUE_KGKM2 CPUE_NOKM2 COUNT WEIGHT_KG TAXON_CONFIDENCE\n1   -19288        21720  449.83013 1876.17592    83     19.90                1\n2   -19252        21720  413.48285  248.08971    12     20.00                1\n3   -17850        21720  990.13573  152.26165     7     45.52                1\n4   -18165        21720 1053.27228  241.85357    12     52.26                1\n5   -18731        21720  946.34812 2592.13274   118     43.08                1\n6   -16960        21720   89.15857   19.99071     1      4.46                1\n  YEAR SRVY             SURVEY SURVEY_DEFINITION_ID\n1 2019  EBS eastern Bering Sea                   98\n2 2019  EBS eastern Bering Sea                   98\n3 2018  EBS eastern Bering Sea                   98\n4 2018  EBS eastern Bering Sea                   98\n5 2019  EBS eastern Bering Sea                   98\n6 2017  EBS eastern Bering Sea                   98\n                                             SURVEY_NAME CRUISE CRUISEJOIN\n1 Eastern Bering Sea Crab/Groundfish Bottom Trawl Survey 201901       -727\n2 Eastern Bering Sea Crab/Groundfish Bottom Trawl Survey 201901       -727\n3 Eastern Bering Sea Crab/Groundfish Bottom Trawl Survey 201801       -723\n4 Eastern Bering Sea Crab/Groundfish Bottom Trawl Survey 201801       -723\n5 Eastern Bering Sea Crab/Groundfish Bottom Trawl Survey 201901       -726\n6 Eastern Bering Sea Crab/Groundfish Bottom Trawl Survey 201701       -712\n  HAULJOIN.1 HAUL STRATUM STATION VESSEL_ID   VESSEL_NAME           DATE_TIME\n1     -19288   96      20    O-18       162 ALASKA KNIGHT 2014-07-04 07:05:37\n2     -19252   76      31    G-03       162 ALASKA KNIGHT 2014-07-24 18:22:52\n3     -17850  117      32    F-19       162 ALASKA KNIGHT 2014-07-24 15:03:58\n4     -18165  172      62    Q-27       162 ALASKA KNIGHT 2013-07-29 18:21:22\n5     -18731   11      31    I-13        94   VESTERAALEN 2013-06-16 12:55:53\n6     -16960  155      50    E-21        94   VESTERAALEN 2012-07-06 07:12:55\n  LATITUDE_DD_START LONGITUDE_DD_START LATITUDE_DD_END LONGITUDE_DD_END\n1          59.68079          -168.6144        59.65546        -168.6178\n2          57.01591          -166.4752        56.99137        -166.4601\n3          56.67170          -168.9406        56.67359        -168.8919\n4          60.31173          -174.7032        60.33716        -174.7090\n5          57.69052          -160.2580        57.66518        -160.2640\n6          56.34430          -170.0621        56.32694        -170.0948\n  BOTTOM_TEMPERATURE_C SURFACE_TEMPERATURE_C DEPTH_M DISTANCE_FISHED_KM\n1                  5.1                   7.8      39              2.821\n2                  4.1                   9.7      74              2.880\n3                  4.5                   8.8      99              3.005\n4                  3.2                  10.1     103              2.845\n5                  5.5                   7.5      54              2.840\n6                  3.9                   7.9     110              2.796\n  DURATION_HR NET_WIDTH_M NET_HEIGHT_M AREA_SWEPT_KM2 PERFORMANCE\n1       0.505      15.682        2.227       0.044239           0\n2       0.528      16.795        2.126       0.048370           0\n3       0.525      15.299        2.152       0.045973           0\n4       0.511      17.440        2.200       0.049617           0\n5       0.520      16.029        2.200       0.045522           0\n6       0.508      17.891        1.971       0.050023           0\n```\n:::\n:::\n\n\n### Ex. 3: Find all species found in the eastern Bering Sea (EBS) survey in 2023\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Pull data\na <- RODBC::sqlQuery(\nchannel = channel, \nquery = \n\"SELECT DISTINCT \nss.COMMON_NAME,\nss.SCIENTIFIC_NAME, \nss.ID_RANK, \nss.WORMS\nFROM GAP_PRODUCTS.FOSS_CATCH cc -- get species codes\nLEFT JOIN GAP_PRODUCTS.FOSS_SPECIES ss -- get species info\nON cc.SPECIES_CODE = ss.SPECIES_CODE\nLEFT JOIN GAP_PRODUCTS.FOSS_HAUL hh -- filter by year and survey\nON cc.HAULJOIN = hh.HAULJOIN\nWHERE hh.YEAR = 2023\nAND hh.SURVEY_DEFINITION_ID = 98 -- EBS survey\nORDER BY COMMON_NAME\")\n\nhead(a)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            COMMON_NAME                 SCIENTIFIC_NAME ID_RANK   WORMS\n1    Alaska falsejingle          Pododesmus macrochisma species  758426\n2   Alaska great-tellin               Megangulus luteus species  423511\n3         Alaska plaice Pleuronectes quadrituberculatus species  254564\n4          Alaska razor                    Siliqua alta species  413689\n5          Alaska skate             Arctoraja parmifera species 1577324\n6 Alaska skate egg case    Arctoraja parmifera egg case species      NA\n```\n:::\n:::\n\n::: {.cell}\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}