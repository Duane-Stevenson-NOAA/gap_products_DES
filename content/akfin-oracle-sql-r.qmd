---
title: AFSC RACE Groundfish Data for AKFIN in Oracle with SQL and R
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, error = FALSE, message = FALSE, eval = TRUE, comment = FALSE)
```

## Access data via Oracle (AFSC only)

AFSC `Oracle` users can access the database via `SQL developer` to view and pull the production data directly from the `GAP_PRODUCTS` `Oracle` schema. 

### Access data via Oracle

If the user has access to the AFSC `Oracle` database, the user can use `SQL developer` to view and pull the GAP Products data directly from the `GAP_PRODUCTS` `Oracle` schema. 

### Connect to Oracle from R

Many users will want to access the data from `Oracle` using `R`. The user will need to install the `RODBC` `R` package and ask OFIS (IT) connect `R` to `Oracle`. Then, use the following code in `R` to establish a connection from `R` to `Oracle`: 

Here, the user can establish the oracle connection by entering their username and password in the `channel <- gapindex::oracle_connect()` function. Never save usernames or passwords in scripts that may be intentionally or unintentionally shared with others. If no username and password is entered in the function, pop-ups will appear on the screen asking for the username and password. 

## Data SQL Query Examples: 

### Ex. 0: Select all data from a table

You can download all of the tables locally using a variation of the code below. Once connected, pull and save the tables of interest into the `R` environment. 

```{r}
#| label: test-0
#| eval: false
#| message: false
#| warning: false
#| echo: true

locations <- c(
  "GAP_PRODUCTS.AKFIN_AGECOMP", 
  "GAP_PRODUCTS.AKFIN_AREA", 
  "GAP_PRODUCTS.AKFIN_BIOMASS", 
  "GAP_PRODUCTS.AKFIN_CATCH", 
  "GAP_PRODUCTS.AKFIN_CPUE", 
  "GAP_PRODUCTS.AKFIN_CRUISES", 
  "GAP_PRODUCTS.AKFIN_HAUL", 
  "GAP_PRODUCTS.AKFIN_LENGTH", 
  "GAP_PRODUCTS.AKFIN_METADATA_COLUMN", 
  "GAP_PRODUCTS.AKFIN_SIZECOMP", 
  "GAP_PRODUCTS.AKFIN_SPECIMEN", 
  "GAP_PRODUCTS.AKFIN_STRATUM_GROUPS", 
  "GAP_PRODUCTS.AKFIN_SURVEY_DESIGN", 
  "GAP_PRODUCTS.AKFIN_TAXONOMICS_WORMS" 
)

for (i in 1:length(locations)) {
  print(locations[i])
  a <- RODBC::sqlQuery(channel, paste0("SELECT * FROM ", locations[i]))
  write.csv(x = a, file = here::here("data", paste0(locations[i], ".csv")))
}
```

### Ex. 1: GOA Pacific Ocean perch biomass and abundance

Biomass and abundance for Pacific Ocean perch from 1990 – 2023 for the western/central/eastern GOA management areas as well as for the entire region. 

```{r}
#| label: test-1
#| message: false
#| warning: false
#| echo: true

dat <- RODBC::sqlQuery(channel = channel, 
                       query = 
"WITH FILTERED_STRATA AS (
SELECT AREA_ID, DESCRIPTION FROM GAP_PRODUCTS.AKFIN_AREA
WHERE TYPE in ('REGULATORY_AREA', 'REGION') 
AND SURVEY_DEFINITION_ID = 47)
SELECT 
BIOMASS_MT,
POPULATION_COUNT, 
YEAR, 
DESCRIPTION
FROM GAP_PRODUCTS.AKFIN_BIOMASS BIOMASS
JOIN FILTERED_STRATA STRATA 
ON STRATA.AREA_ID = BIOMASS.AREA_ID
WHERE BIOMASS.SURVEY_DEFINITION_ID IN 47 
AND BIOMASS.SPECIES_CODE = 30060")
```

```{r}
#| label: test-1-tbl
#| tbl-cap: "Ex. 1: GOA Pacific Ocean perch biomass and abundance. "
#| message: false
#| warning: false
#| echo: true

dat0 <- dat %>% 
  janitor::clean_names() %>% 
  dplyr::select(biomass_mt, population_count, year, area = description) %>%
  pivot_longer(cols = c("biomass_mt", "population_count"), 
               names_to = "var", 
               values_to = "val") %>% 
  dplyr::mutate(
    val = ifelse(var == "biomass_mt", val/1e6, val/1e9), 
    var = ifelse(var == "biomass_mt", "Biomass (Mmt)", "Population (B)"), 
    area = gsub(x = area, pattern = " - ", replacement = "\n"), 
    area = gsub(x = area, pattern = ": ", replacement = "\n"), 
    type = sapply(X = strsplit(x = area, split = "\n", fixed = TRUE), `[[`, 2))  %>% 
  dplyr::arrange(type) %>% 
  dplyr::mutate(
    area = factor(area, levels = unique(area), labels = unique(area), ordered = TRUE))

flextable::flextable(head(dat)) %>% theme_zebra()
```

```{r}
#| label: test-1-plot
#| fig-cap: "Ex. 1: GOA Pacific Ocean perch biomass and abundance. "
#| message: false
#| warning: false
#| echo: true

# install.packages("scales")
library(scales)
figure <- ggplot2::ggplot(
  dat = dat0, 
  mapping = aes(x = year, y = val, color = type)) +
  ggplot2::geom_point(size = 3) + 
  ggplot2::facet_grid(cols = vars(area), rows = vars(var), scales = "free_y") + 
  ggplot2::scale_x_continuous(name = "Year", n.breaks = 3) +
  ggplot2::scale_y_continuous(name = "Estimate", labels = comma) +
  ggplot2::labs(title = 'GOA Pacific Ocean perch biomass and abundance 1990 – 2023')  + 
  ggplot2::guides(color=guide_legend(title = "Region Type"))+
  ggplot2::scale_color_grey() +
  ggplot2::theme_bw() +
  ggplot2::theme(legend.direction = "horizontal", 
                 legend.position = "bottom")

figure
```

### Ex. 2: AI Rock sole size compositions and ridge plot

Northern and Southern rock sole size composition data from 1991 – 2022 for the Aleutian Islands, with Ridge plot from [`ggridges`](https://cran.r-project.org/web/packages/ggridges/vignettes/introduction.html).

```{r}
#| label: test-2
#| message: false
#| warning: false
#| echo: true

dat <- RODBC::sqlQuery(channel = channel, 
                       query = 
"WITH FILTERED_STRATA AS (
SELECT 
AREA_ID, 
DESCRIPTION 
FROM GAP_PRODUCTS.AKFIN_AREA
WHERE TYPE = 'REGION' 
AND SURVEY_DEFINITION_ID = 52)
SELECT 
LENGTH_MM, 
YEAR
FROM GAP_PRODUCTS.AKFIN_SIZECOMP SIZECOMP
JOIN FILTERED_STRATA STRATA 
ON STRATA.AREA_ID = SIZECOMP.AREA_ID
WHERE SIZECOMP.SURVEY_DEFINITION_ID IN 52 
AND SIZECOMP.SPECIES_CODE IN (10261, 10262)")
```

```{r}
#| label: test-2-tbl
#| tbl-cap: "Ex. 2: AI Rock sole size compositions and ridge plot. "
#| message: false
#| warning: false
#| echo: true

dat0 <- dat %>% 
  janitor::clean_names() %>% 
  dplyr::mutate(length_cm = length_mm/10)
flextable::flextable(head(dat)) %>% theme_zebra()
```


```{r}
#| label: test-2-plot
#| fig-cap: "Ex. 2: AI Rock sole size compositions and ridge plot. "
#| message: false
#| warning: false
#| echo: true

# install.packages("ggridges")
library(ggridges)
figure <- 
  ggplot2::ggplot(
    data = dat0, 
    mapping = aes(x = length_cm, y = as.factor(year), fill = stat(x))) +
  ggridges::theme_ridges(center_axis_labels = TRUE) + 
  ggridges::geom_density_ridges_gradient(scale = 4, show.legend = FALSE) + 
  ggplot2::scale_y_discrete(name = "Year", expand = c(0.01, 0)) +
  ggplot2::scale_x_continuous(name = "Length (cm)", expand = c(0.01, 0)) +
  # ggplot2::scale_fill_grey() +
  ggplot2::labs(title = 'AI Rock sole Size Compositions 1991 – 2022') 

figure
```

### Ex. 3: EBS Walleye Pollock Age Compositions and Age Pyramid

Walleye pollock age composition for the EBS Standard Area from 1982 – 2022 and the EBS + NW Area from 1987 – 2022, with age pyramid plot. 

```{r}
#| label: test-3
#| message: false
#| warning: false
#| echo: true

dat <- RODBC::sqlQuery(channel = channel, 
                       query = 
"WITH FILTERED_STRATA AS (
SELECT 
AREA_ID, 
DESCRIPTION 
FROM GAP_PRODUCTS.AKFIN_AREA
WHERE TYPE = 'REGION' AND 
SURVEY_DEFINITION_ID = 98)
SELECT 
AGECOMP.AGE, 
AGECOMP.POPULATION_COUNT, 
AGECOMP.SEX
FROM GAP_PRODUCTS.AKFIN_AGECOMP AGECOMP
JOIN FILTERED_STRATA STRATA 
ON STRATA.AREA_ID = AGECOMP.AREA_ID
WHERE SURVEY_DEFINITION_ID = 98 
AND SPECIES_CODE = 21740
AND AGE >= 0")
```

```{r}
#| label: test-3-tbl
#| tbl-cap: "Ex. 3: EBS Walleye Pollock Age Compositions and Age Pyramid. "
#| message: false
#| warning: false
#| echo: true

dat0 <- dat %>% 
  janitor::clean_names() %>% 
  dplyr::filter(sex %in% c(1,2)) %>%
  dplyr::mutate(
    sex = ifelse(sex == 1, "M", "F"),
    population_count = # change male population to negative
      ifelse(sex=="M", population_count*(-1), population_count*1)/1e9) 

flextable::flextable(head(dat)) %>% theme_zebra()
```


```{r}
#| label: test-3-plot
#| fig-cap: "Ex. 3: EBS Walleye Pollock Age Compositions and Age Pyramid. "
#| message: false
#| warning: false
#| echo: true

figure <- ggplot2::ggplot(
  data = dat0, 
  mapping = 
                 aes(x = age,
                     y = population_count, 
                     fill = sex)) +
  ggplot2::scale_fill_grey() +
  ggplot2::geom_bar(stat = "identity") +
  ggplot2::coord_flip() +
  ggplot2::scale_x_continuous(name = "Age") +
  ggplot2::scale_y_continuous(name = "Population (billions)", labels = abs) +
  ggplot2::ggtitle(label = "EBS Walleye Pollock Age Compositions 1982 – 2022")  + 
  ggplot2::guides(fill = guide_legend(title = "Sex"))+
  ggplot2::theme_bw()

figure
```

### Ex. 4: NBS Pacific cod biomass and abundance

Pacific cod biomass and abundance data for the NBS by stratum. 

```{r}
#| label: test-4
#| message: false
#| warning: false
#| echo: true

dat <- RODBC::sqlQuery(channel = channel, 
                       query = 
"WITH FILTERED_STRATA AS (
SELECT 
AREA_ID, 
AREA_NAME, 
DESCRIPTION 
FROM GAP_PRODUCTS.AKFIN_AREA
WHERE TYPE in ('STRATUM') AND 
SURVEY_DEFINITION_ID = 143) 
SELECT 
BIOMASS.BIOMASS_MT, 
BIOMASS.POPULATION_COUNT, 
BIOMASS.YEAR, 
STRATA.AREA_NAME
FROM GAP_PRODUCTS.AKFIN_BIOMASS BIOMASS 
JOIN FILTERED_STRATA STRATA 
ON STRATA.AREA_ID = BIOMASS.AREA_ID
WHERE BIOMASS.SURVEY_DEFINITION_ID IN 143 
AND BIOMASS.SPECIES_CODE = 21720")
```

```{r}
#| label: test-4-tbl
#| tbl-cap: "Ex. 4: NBS Pacific cod biomass and abundance. "
#| message: false
#| warning: false
#| echo: true

dat0 <- dat %>% 
  janitor::clean_names() %>% 
  dplyr::select(biomass_mt, population_count, year, area = area_name) %>%
  pivot_longer(cols = c("biomass_mt", "population_count"), 
               names_to = "var", 
               values_to = "val") %>% 
  dplyr::mutate(
    val = ifelse(var == "biomass_mt", val/1e6, val/1e9), 
    var = ifelse(var == "biomass_mt", "Biomass (Mmt)", "Population (B)"), 
    area = factor(area, levels = unique(area), labels = unique(area), ordered = TRUE))
flextable::flextable(head(dat)) %>% theme_zebra()
```

```{r}
#| label: test-4-fig
#| fig-cap: "Ex. 4: NBS Pacific cod biomass and abundance. "
#| message: false
#| warning: false
#| echo: true

figure <- ggplot2::ggplot(
  dat = dat0, 
  mapping = aes(y = val, x = year, fill = area))  + 
  ggplot2::geom_bar(position="stack", stat="identity") +  
  ggplot2::facet_grid(rows = vars(var), scales = "free_y") +
  ggplot2::scale_y_continuous(name = "Estimate", labels = comma) +
  ggplot2::scale_x_continuous(name = "Year", breaks = unique(dat0$year)) +
  ggplot2::labs(title = 'NBS Pacific cod biomass and abundance by stratum')  + 
  ggplot2::guides(fill=guide_legend(title = "Region Type"))+
  ggplot2::scale_fill_grey() +
  ggplot2::theme_bw() +
  ggplot2::theme(legend.direction = "horizontal", 
                 legend.position = "bottom")

figure
```

### Ex. 5: GOA Pacific Ocean perch biomass and line plot

Pacific Ocean perch biomass totals for GOA between 1984-2021 from `GAP_PRODUCTS.AKFIN_BIOMASS`

```{r}
#| label: test-5
#| message: false
#| warning: false
#| echo: true

dat <- RODBC::sqlQuery(channel = channel, 
                       query = 
"SELECT 
SURVEY_DEFINITION_ID, 
BIOMASS_MT, 
YEAR
FROM GAP_PRODUCTS.AKFIN_BIOMASS
WHERE SPECIES_CODE = 30060 
AND SURVEY_DEFINITION_ID = 47 
AND AREA_ID = 99903 
AND YEAR BETWEEN 1984 AND 2021;") %>% 
  janitor::clean_names() %>% 
  dplyr::mutate(biomass_mt = biomass_mt/1000)
```

```{r}
#| label: test-5-tbl
#| tbl-cap: "Ex. 5: GOA Pacific Ocean perch biomass and line plot. "
#| message: false
#| warning: false
#| echo: true

a_mean <- dat %>% 
  dplyr::group_by(survey_definition_id) %>% 
  dplyr::summarise(biomass_mt = mean(biomass_mt, na.rm = TRUE), 
                   minyr = min(year, na.rm = TRUE), 
                   maxyr = max(year, na.rm = TRUE)) 
flextable::flextable(head(dat)) %>% theme_zebra()
```

```{r}
#| label: test-5-fig
#| fig-cap: "Ex. 5: GOA Pacific Ocean perch biomass and line plot. "
#| message: false
#| warning: false
#| echo: true

figure <-
  ggplot(data = dat, 
         mapping = aes(x = year, 
                       y = biomass_mt)) +
  ggplot2::geom_point(size = 2.5, color = "grey40") + 
  ggplot2::scale_x_continuous(
    name = "Year", 
    labels = scales::label_number(
      accuracy = 1, 
      big.mark = ""))   +
  ggplot2::scale_y_continuous(
    name = "Biomass (Kmt)", 
    labels = comma) +
  ggplot2::geom_segment(
    data = a_mean,
    mapping = aes(x = minyr, 
                  xend = maxyr, 
                  y = biomass_mt, 
                  yend = biomass_mt),
    linetype = "dashed", 
    linewidth = 2) +
  ggplot2::ggtitle(
    label = "GOA Pacific Ocean Perch Biomass 1984-2021", 
    subtitle = paste0("Mean = ", 
                      formatC(x = a_mean$biomass_mt, 
                              digits = 2, 
                              big.mark = ",", 
                              format = "f"), 
                      " Kmt")) +
  ggplot2::theme_bw()

figure
```

### Ex. 6: EBS Pacific Ocean perch CPUE and [`akgfmaps`](https://github.com/afsc-gap-products/akgfmaps) map 

Pacific Ocean perch catch-per-unit-effort estimates for EBS in 2021 from `GAP_PRODUCTS.AKFIN_CPUE` and map constructed using [`akgfmaps`](https://github.com/afsc-gap-products/akgfmaps). Here, we'll use AKFIN HAUL and CRUISES data also included in this repo, for convenience, though they are very similar to their `RACEBASE` analogs. 

```{r}
#| label: test-6
#| message: false
#| warning: false
#| echo: true

dat <- RODBC::sqlQuery(channel = channel, 
                       query = 
"SELECT 
(cp.CPUE_KGKM2/100) CPUE_KGHA, -- akgfmaps is expecting hectares
hh.LATITUDE_DD_START LATITUDE,
hh.LONGITUDE_DD_START LONGITUDE

FROM GAP_PRODUCTS.AKFIN_CPUE cp

-- Use HAUL data to obtain LATITUDE & LONGITUDE and connect to cruisejoin
LEFT JOIN GAP_PRODUCTS.AKFIN_HAUL hh
ON cp.HAULJOIN = hh.HAULJOIN

-- Use CRUISES data to obtain YEAR and SURVEY_DEFINITION_ID
LEFT JOIN GAP_PRODUCTS.AKFIN_CRUISES cc
ON hh.CRUISEJOIN = cc.CRUISEJOIN

WHERE cp.SPECIES_CODE = 30060 
AND cc.SURVEY_DEFINITION_ID = 98 
AND cc.YEAR = 2021;")
```

```{r}
#| label: test-6-tbl
#| tbl-cap: "Ex. 6: EBS Pacific Ocean perch CPUE and [`akgfmaps`](https://github.com/afsc-gap-products/akgfmaps) map. "
#| message: false
#| warning: false
#| echo: true

flextable::flextable(head(dat)) %>% theme_zebra()
```


```{r}
#| label: test-6-fig
#| fig-cap: "Ex. 6: EBS Pacific Ocean perch CPUE and [`akgfmaps`](https://github.com/afsc-gap-products/akgfmaps) map. "
#| message: false
#| echo: true
#| message: false
#| warning: false

# devtools::install_github("afsc-gap-products/akgfmaps", build_vignettes = TRUE)
library(akgfmaps)

figure <- akgfmaps::make_idw_map(
  x = dat, # Pass data as a data frame
  region = "bs.south", # Predefined EBS area
  set.breaks = "jenks", # Gets Jenks breaks from classint::classIntervals()
  in.crs = "+proj=longlat", # Set input coordinate reference system
  out.crs = "EPSG:3338", # Set output coordinate reference system
  grid.cell = c(20000, 20000), # 20x20km grid
  key.title = "Pacific Ocean perch") # Include in the legend title

figure$plot + 
  ggplot2::guides(fill=guide_legend(title = "Pacific Ocean perch\nCPUE (kg/km2)"))  |>   
  change_fill_color(new.scheme = "grey", show.plot = FALSE)
```

```{r rodbc-close}
RODBC::odbcCloseAll()
```
