SELECT hh.HAULJOIN, 
hh.VESSEL_ID AS VESSEL, 
hh.HAUL, 
hh.PERFORMANCE, 
hh.DATE_TIME AS START_TIME,
hh.DURATION_HR AS DURATION, 
hh.DISTANCE_FISHED_KM AS DISTANCE_FISHED, 
hh.NET_WIDTH_M AS NET_WIDTH,
hh.NET_HEIGHT_M AS NET_HEIGHT, 
hh.STRATUM, 
hh.LATITUDE_DD_START AS START_LATITUDE, 
hh.LATITUDE_DD_END AS END_LATITUDE, 
hh.LONGITUDE_DD_START AS START_LONGITUDE, 
hh.LONGITUDE_DD_END AS END_LONGITUDE, 
hh.STATION AS STATIONID, 
hh.DEPTH_M AS BOTTOM_DEPTH, 
hh.SURFACE_TEMPERATURE_C AS SURFACE_TEMPERATURE, 
hh.BOTTOM_TEMPERATURE_C AS GEAR_TEMPERATURE, 
vv.VESSEL_ID, 
vv.NAME AS VESSEL_NAME
FROM RACEBASE.HAUL hh
LEFT JOIN RACE_DATA.VESSELS vv
ON hh.VESSEL = vv.VESSEL_ID



DROP MATERIALIZED VIEW GAP_PRODUCTS.V_TAXONOMIC_ID;

create materialized view  GAP_PRODUCTS.V_TAXONOMIC_ID AS
SELECT ww.SPECIES_CODE, 
ii.SPECIES_CODE AS SP, 
ww.COMMON_NAME,        
ww.ACCEPTED_NAME AS SCIENTIFIC_NAME, 
ww.ID_RANK, 
ww.DATABASE_ID AS WORMS, 
ii.DATABASE_ID AS ITIS
FROM GAP_PRODUCTS.TAXONOMICS_WORMS ww
LEFT JOIN GAP_PRODUCTS.TAXONOMICS_ITIS ii
ON ww.SPECIES_CODE = ii.SPECIES_CODE
AND ww.SPECIES_CODE = ii.SPECIES_CODE;

ALTER TABLE V_TAXONOMIC_ID
DROP COLUMN SP;

create or replace trigger myexampletrigger
before insert or update
on tblOrderCharges
for each row
DECLARE
// your variables here
BEGIN
select fldDiscountPercent,fldPartServiceType into YourVariable1,YourVariable2 from tblPartsServices where /*your criteria here*/;

:new.fldDiscountPercent := YourVariable1;
:new.fldChargeType := YourVariable2;
END;
/
  
  COMMENT ON COLUMN GAP_PRODUCTS.V_TAXONOMIC_ID.SPECIES_CODE 
IS GAP_PRODUCTS.METADATA_COLUMN.METADATA_COLNAME;


CREATE TABLE JOIN_FOSS_CPUE_HAUL
SELECT hh.HAULJOIN, 
hh.VESSEL_ID AS VESSEL, 
hh.HAUL, 
hh.PERFORMANCE, 
hh.DATE_TIME AS START_TIME,
hh.DURATION_HR AS DURATION, 
hh.DISTANCE_FISHED_KM AS DISTANCE_FISHED, 
hh.NET_WIDTH_M AS NET_WIDTH,
hh.NET_HEIGHT_M AS NET_HEIGHT, 
hh.STRATUM, 
hh.LATITUDE_DD_START AS START_LATITUDE, 
hh.LATITUDE_DD_END AS END_LATITUDE, 
hh.LONGITUDE_DD_START AS START_LONGITUDE, 
hh.LONGITUDE_DD_END AS END_LONGITUDE, 
hh.STATION AS STATIONID, 
hh.DEPTH_M AS BOTTOM_DEPTH, 
hh.SURFACE_TEMPERATURE_C AS SURFACE_TEMPERATURE, 
hh.BOTTOM_TEMPERATURE_C AS GEAR_TEMPERATURE, 
vv.VESSEL_ID, 
vv.NAME AS VESSEL_NAME
FROM RACEBASE.HAUL hh
LEFT JOIN RACE_DATA.VESSELS vv
ON hh.VESSEL = vv.VESSEL_ID;


CREATE VIEW JOIN_FOSS_CPUE_HAUL AS
SELECT hh.HAULJOIN, 
hh.VESSEL AS VESSEL_ID, 
hh.HAUL, 
hh.PERFORMANCE, 
hh.START_TIME AS DATE_TIME,
hh.DURATION AS DURATION_HR, 
hh.DISTANCE_FISHED AS DISTANCE_FISHED_KM, 
hh.NET_WIDTH AS NET_WIDTH_M,
hh.NET_HEIGHT AS NET_HEIGHT_M, 
hh.STRATUM, 
hh.START_LATITUDE AS LATITUDE_DD_START, 
hh.END_LATITUDE AS LATITUDE_DD_END, 
hh.START_LONGITUDE AS LONGITUDE_DD_START, 
hh.END_LONGITUDE AS LONGITUDE_DD_END, 
hh.STATIONID AS STATION, 
hh.BOTTOM_DEPTH AS DEPTH_M, 
hh.SURFACE_TEMPERATURE AS SURFACE_TEMPERATURE_C, 
hh.GEAR_TEMPERATURE AS BOTTOM_TEMPERATURE_C, 
vv.NAME AS VESSEL_NAME
FROM RACEBASE.HAUL hh
LEFT JOIN RACE_DATA.VESSELS vv
ON hh.VESSEL = vv.VESSEL_ID;

